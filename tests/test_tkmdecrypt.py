#!/usr/bin/python # noqa
# -*- coding: utf-8 -*-
"""Test module for tkmdecrypt.py"""

import tkmdecrypt as td # pylint: disable=E0401

_encrypted_traffic_index_data = 'AF199176AE2FC5028302F355B0478735825B0302A' + \
  '274B755277DA566CD6FE6661066C57506660566CC599573A3533645FB5813077D0A1433' + \
  '2B5DA5279A78E0158728F4642804C571F206A757874E1217612907160C52'

_encrypted_static_data = 'B099B98B6C39F3B033950629C7E7A7C8B122B08BE739640A' + \
  'B41648DB25D528E03E7AA2496C39F3E0BC4269F22AA9B21B3DB34A8B6C8EF3B03395062' + \
  '9AAADCA199422B08BE73964C89CC7487025D528E03E7AA2496C39F3E0BC4269F22AA9B2' + \
  '1B3DB34A8B6CF6F3B033950629AA17BF983F22B03CE7217C673346997925D528E03E7AA' + \
  '2496C39F3E0BC4269F22AA9B21B3DB34A8B6CAFF3B033950629AA1708C02CB52924E321' + \
  '7C7F16B4915125D528983EC0A23C6CA6F3B4449D9E2DBF2E2B51D602A2B96CF67C632B1' + \
  'F0651AAF53A57B5AD2D726439D342BC3E915125AD28223EB5A2A36CF20B6BB3420BAA26' + \
  '64C0E03EC0A2F3E32564E92B16B16325E7BF4BB1ADAAA364BC59E89C1EB1717DF5CAC0A' + \
  '922AAAB305670E7E0844A72B41D70C0A922FA24E739F27FB43E996325E7BF4BB1ADAAA3' + \
  'C621ABE8E41EB1717DF5CAC0A922AAAB305670E7E0844A72B41D70C01E22FA24E739F2B' + \
  '09CFC3B2925E7BF4BB1AD4001B5BC2AE8E41EB1717DF5CAC0A922AAAB305670E7E0844A' + \
  '72B41D70C06622FA24E739F2B0B43E73A825E7BF4BB1ADB049FB217CE8E41EB1717DF5C' + \
  'AC0A922AAAB305670E7E0844A72B41D70C03F22FA24E739F2E92B0CC9A825E7BF4BB1AD' + \
  'A3724C217CE8E41EB1717DF5CAC0A922AAAB305670E7E0844A72B41D70C02C22FA24E73' + \
  '9F2E92B0C736325E7BF4BB1ADA3724C4CF3B0BC3E9129251728573E2AA2F7942DFCB426' + \
  'C592E0CDAD28223E7A2D20FBAFF27F5E1F3B713762A34FB1237B3C6D04F3B0BC3E91292' + \
  '51728573E2AA2F7942DFCB426C592E0CDAD286A3E7A2D20FBAFF267650C3B713762A34F' + \
  'B17AAA49FB04F3B0BC3E9129251728573E2AA2F7942DFCB426C592E0CDAD28C83E7A2D2' + \
  '0FBAFF267333EC9713762A34FB17AAAB97EAEABE89C1EC971C7F5BFC03622FE53EFA1AF' + \
  '72671D00997DF5F1C066AD293C6DBCF26765469163B27EA74F66232DF36CF6F3C8BC469' + \
  '193256228C83E7E5A2863F26933BF8F7929257A2898B1A935AA8E04AB7F331E83E6AE7A' + \
  'A7E03F2340496CF6F3C8BC469193256228C83E7E5A2863F26933BF8F792925D5BFC066A' + \
  'D293C6D041131BD3E9163B27EA719B1AD7B246DAEABE89C1EC971C7F5BFC03622FE53EF' + \
  'A1AF72671D009924F5BFC066AD293C6D0411319C1E83E6AE7AF14FB1ADFAB96CAFF3C8B' + \
  'C469193256228C83E7E5A2863F26933BF8F797025D52898B1A935AA64F66431BC0C06FA' + \
  'AA2CA7E01E30B0AB6DAED3E8E41E7371B2F520C062DA21A4303428EB2DF690717DF5704' + \
  'FB5B5A3724C212A31BC0C06FAAA2C20D2DC30AAAB6DAED3E8E41E7371B2F520C062DA21' + \
  'A4303428EB2DF6907124F5704FB5B5A324E3F6D3E9BC0C06FAAA2C296A36FBA2AA6C8EF' + \
  '3B0BCFC91E625FD289CC6A1ADF7F675F079541F916325ADA74BA9232D2434BCE1E8AE89' + \
  '1AFEFCF482C86622A3AB4CAEABE85E1E06712DF57438BD2DFE31B7AD6200BD1E73717D7' + \
  'AA3573FAD2DF37E4CF3FA2B951EA8245F20E0E722A3AB4CAEABE85E1E06712DF57438BD' + \
  '2DFE31B7AD6200BD1E3B717D7AA3572C024072FB4CF3FA2B951EA8B22C704FE722A3AB4' + \
  'CAEABE85E1E06712DF57438BD2DFE31B7AD6200AE1E06717D7AA3572C0240727E4CF3FA' + \
  '2B951EA8B22C3AC1DC22B0AB34AED3E85E1E06712DF57438BD2DFE31B7AD6200AE1EB17' + \
  '17D7AA3572C02FA72E3AEE17F379199FE052CA7C02C22FAAB4CAE11E82B1E9971790DAB' + \
  'CF62B879A8FD46E1E8E41EC9FEAE623A9836AD40AB7E397867B4FC737925E728983E02A' + \
  '2496C39F3E0BC4269F22AA9B21B3DB34AB96CAFF3B03395066324AD29D23E303520E3A6' + \
  '117F2B46916325AD28E03EC0A23C6CA6F3B4449D9E2DBF2E2B51D630A2B96CF67C632B0' + \
  'C3B6305FD28D2A9A92DA37EBC7C31BC0C912925D528223EB5A2A36CF20B6BB3420BAA26' + \
  '64C0D23EC0A2F3E32564FA16C7837025E7BF4BB12AB0F3E3A6F3FABC469151251728573' + \
  'E2AA2F7942DFCB426C592E0CD1728573E7A2D20FBBC5931AE1F9163B27EA7C82C7A2DA3' + \
  '6C4CF3B0BC3E9193256228C83E7E5A2863F26933BF8F799325D52898B1A9354934AEE17' + \
  'F37919951FC1770C0DC22FAAB4CAE11E82B1E9971790DABCF62B879A8FD4611E8E41EC9' + \
  'FEAE62CAD2E77A40AB7E39786716C70629AAF5CAC0662282AB8EAE64E8B41ECD89A6FA7' + \
  '45AE5213343C6AE64E8E4911AE6C7E7F198DC22B03CE72159312B461E718FF570C01E22' + \
  '40ABFBAEFBE8E0E6127E796FF3C3AFCA08AB4CAEAB6737893BE67DD5CAC02CB52924C64' + \
  'CFB67651E3B717DF508C0DC2235AB64AEAF103F11CDEBFEF6B9289422FAAB3421787F16' + \
  '1F0679AAF53A57B5AD0849FBBCFBE8161EC97105F5CAC0A922AAAB305670E7E0844A72B' + \
  '41D82C03F22FA24E739590ABD1F99713762A34F94232DAA4CAE59E8E41EB171C7F5BFC0' + \
  '3622FE53EFA1AF72671D00992DF5BFC066AD293CC64CF2E9B41E83E6AE7A82C1B12382A' + \
  'B64AEABE89C1E7371B2F520C062DA21A4303428EB2DF6997105F5704FB5B508016DAFD3' + \
  'E8AE891AFE8FF43AD21E22AAAB34AED3E85E1E06712DF57438BD2DFE31B7AD6200B41EC' + \
  '9717D7AA357942A2DB97EAEE17F37913B70C7FD82C03622FAAB4CAE11E82B1E9971790D' + \
  'ABCF62B879A8FD46FBE8BD1EC9FEAE622057E77AB0AB7E397867163E3B6305F520C0662' + \
  '282AB8EAE64E8B41ECD89A6FA745AE521334364AEE1E8E4911AE62DAD3A981E22B03CE7' + \
  '2111672BC790712DF570C01E2240ABFBAEFBE8E0E6127E796FF3C3AFCAAAAB8EAEAB673' + \
  '7899970242C20C02CB529248E77ABE9651E99717DF508C0DC2235AB64AEAF103F11CDEB' + \
  'FEF6B928E72235AB3421787FB41F90A82DF53A57B5AD407234AF2AE8651EC97105F5CAC' + \
  '0A922AAAB305670E7E0844A72B41DF1C01E22FA24E739FBE9330C3B713762A34FDC2AAA' + \
  'B9E3AE2AE8E41EB171C7F5BFC03622FE53EFA1AF72671D0099FCF570C066AD293C64BC7' + \
  'CC8651E83E6AE7ACAC8DC02FAABB5AEABE89C1E7371B2F520C062DA21A4303428EB2DF6' + \
  '487124F5704FB5B5AA0134397CE8AE891AFEC7FD82572C227BAB34AED3E85E1E06712DF' + \
  '57438BD2DFE31B7AD6200651E83717D7AA357E70240F334AEE17F379173632D7A28193E' + \
  '7AA28B6C4CF37FBC16912DDD76279CA4F9A13A8477F30ABC461EFAB22C70D2B130A2B9F' + \
  'B257C0AAEFC1E63252C28983E02A2496C39F3E0BC4269F22AA9B21B3DB34A726C04F3B0' + \
  '339506A8245FCA4F3E303520E34CE131E4FC91A825AD28E03EC0A23C6CA6F3B4449D9E2' + \
  'DBF2E2B51D6ADA23C6CF67C632BC790DBC77A28D2A9A92D497E77AB0ABC91912925D528' + \
  '223EB5A2A36CF20B6BB3420BAA2664C04F3E02A2F3E3256431163E1EDB25E7BF4BB1C04' + \
  '0B96D21F367BC469151251728573E2AA2F7942DFCB426C592E0CD7A28983E7A2D20FB77' + \
  'FBFA161E83E6AE7ACA222CADA2246CF6F3C8BCFC91E625FD289CC6A1ADF7F675F079549' + \
  '1917025ADA74BA9FB7BB9B504F3FA2B951E93C7AD08C13EADA2F3'

_decrypted_static_data = '' + \
  '1;0;29.0254979;41.0057786;1;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '1;1;29.0292586;41.0011883;1;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '1;2;29.0295023;40.9999277;1;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '1;3;29.02951;40.9999066;1;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '1;4;29.03019;40.9987016;1;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '1;5;29.030714;40.9977746;1;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;0;29.0307174;40.9977692;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;1;29.0321562;40.9956848;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;2;29.0327158;40.9945099;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;3;29.0330428;40.9938199;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;4;29.0330454;40.993815;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;5;29.0330536;40.9938036;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;6;29.0339846;40.9927506;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;7;29.0339912;40.992744;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;8;29.0343982;40.992392;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;9;29.0356209;40.9913355;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '2;10;29.0365831;40.9899893;2;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;0;29.036581;40.9899924;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;1;29.037208;40.9891144;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;2;29.0381988;40.9874547;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;3;29.0399213;40.983678;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;4;29.0399244;40.983672;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;5;29.0399245;40.9836718;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '3;6;29.0415805;40.9808298;3;1;2;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '4;0;29.0415845;40.9808435;4;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '4;1;29.041289;40.979189;4;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '4;2;29.042795;40.97557;4;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '4;3;29.043234;40.975002;4;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '4;4;29.046417;40.974498;4;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '4;5;29.046843;40.974297;4;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '5;0;29.046843;40.974297;5;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '5;1;29.052;40.971852;5;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '5;2;29.054825;40.968029;5;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '6;0;29.054825;40.968029;6;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '6;1;29.060215;40.965798;6;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '6;2;29.063079;40.965047;6;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '6;3;29.065337;40.963931;6;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '7;0;29.065337;40.963931;7;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '7;1;29.066331;40.963441;7;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '7;2;29.067944;40.963576;7;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '7;3;29.070824;40.961641;7;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '7;4;29.072421;40.959083;7;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '7;5;29.073387;40.958238;7;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;0;29.073387;40.958238;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;1;29.073946;40.957749;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;2;29.074918;40.957512;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;3;29.076209;40.957604;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;4;29.081522;40.95479;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;5;29.082494;40.954594;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '8;6;29.083659;40.954825;8;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '9;0;29.083659;40.954825;9;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '9;1;29.086196;40.955439;9;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '9;2;29.08746;40.95549;9;2;1;5;0;7;KADIK\xc3\x96Y\r\n' + \
  '9;3;29.088486;40.955213;9;2'


def test_tkmdecrypt__hex_to_str():
    result = "\xaf\x19\x91v\xae/\xc5\x02\x83\x02\xf3U\xb0G\x87" + \
      "5\x82[\x03\x02\xa2t\xb7U'}\xa5f\xcdo\xe6f\x10f\xc5u\x06f\x05" + \
      "f\xccY\x95s\xa3S6E\xfbX\x13\x07}\n\x143+]\xa5'\x9ax\xe0\x15\x87" + \
      "(\xf4d(\x04\xc5q\xf2\x06\xa7W\x87N\x12\x17a)\x07\x16\x0cR"
    # pylint: disable=W0212
    assert td._hex_to_str(_encrypted_traffic_index_data, -1) == result


def test_tkmdecrypt_de_shuffle_hex_str():
    a = '7A1F69190A2E2C5F58035F323B4058770852203B5A725B7462776A5D6C6D6E6F7' + \
      '1605C56606660567C5C39594A5353630F5B7138370D314A225B7A5D197A5E086827' + \
      '4F4872081C545F027A761847712E162160790C'
    key = "60413275"
    # pylint: disable=W0212
    b = td._de_shuffle_hex_str(_encrypted_traffic_index_data, key, 5, -2)
    assert a == b


def test_tkmdecrypt_decrypt0():
    """Test decrypt0 function"""
    assert td.decrypt0(_encrypted_traffic_index_data, "60413275") == u'8'


def test_tkmdecrypt_decrypt2_and_old():
    """Test decrypt2 function"""
    a = td.decrypt2(_encrypted_static_data)
    b = td.decrypt2_old(_encrypted_static_data)
    assert a == b


# Benchmark test

def test_tkmdecrypt_decrypt2_benchmark(benchmark):
    """Benchmark test for decrypt2 function"""
    a = benchmark(td.decrypt2, _encrypted_static_data)
    assert a == _decrypted_static_data


def test_tkmdecrypt_decrypt2_old_benchmark(benchmark):
    """Benchmark test for decrypt2 function"""
    a = benchmark(td.decrypt2_old, _encrypted_static_data)
    assert a == _decrypted_static_data
